(ns hoplon.dimple.chart
  (:require-macros [tailrecursion.javelin :refer [cell=]]))

(def chart-types
  {:line js/dimple.plot.line
   :area js/dimple.plot.area
   :bubble js/dimple.plot.bubble
   :bar js/dimple.plot.bar})

(defelem chart-basic
  "Construct a basic dimple chart.

   Required parameters:

   data: a cell with the data to plot
   width: the width of the chart - can be a %
   height: the height of the chart - can be a %

   Optional parameters:

   id: the id to give the containing div (defaults to autogenerated)
   custom-setup: a function of the chart to further customize using dimple

   Notes:

   The chart will redraw whenever the data cell changes, or on screen resize.
   The initial draw will only take place once the window has loaded"
  [{:keys [data width height id custom-setup]
    :or {id (str (gensym))}}]
  (with-let [container (div :width width :height height :id id)]
    (with-init!
      (let [Chart (.-chart js/dimple)
            svg (.newSvg js/dimple (str "#" id) width height)
            data-js (clj->js @data)
            chart (Chart. svg data-js)
            draw (fn [transition resize-only?]
                   (.draw chart transition resize-only?))]
        (when custom-setup (custom-setup chart))
        (.resize (js/jQuery js/window) (partial draw 0 true))
        (.load (js/jQuery js/window) (partial draw 0 false))
        (cell= (do (set! (.-data chart) (clj->js data))
                   (draw 0 false)))))))
